{"version":3,"sources":["popularBooks.js","store/actionTypes.js","store/reducers/popularBooksReducer.js","store/reducers/index.js","store/reducers/searchResults.js","store/store.js","store/actions/index.js","store/actions/fetchPopularBooks.js","store/actions/fetchQueryBook.ts","store/actions/clearSearch.js","components/navbar.js","components/bookCard.js","pages/homepage.js","App.js","serviceWorker.js","index.js"],"names":["PopularBooks","FETCH_POPULAR_BOOKS","FETCH_QUERY_BOOK","CLEAR_SEARCH_RESULTS","popularBooksReducer","state","action","type","payload","reducers","combineReducers","popularBooks","searchResults","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","fetchPopularBooks","dispatch","a","booksData","ajxReqs","forEach","booktitle","push","fetch","Promise","all","then","resArray","i","length","json","data","items","volumeInfo","bookinfo","title","authors","publisher","description","thumbnailLink","imageLinks","thumbnail","canonicalVolumeLink","fetchQueryBook","query","res","map","item","clearSearch","Header","props","isToggled","toggleSearch","bind","triggerSearch","this","setState","event","preventDefault","target","search","value","className","to","location","pathname","id","href","onClick","onSubmit","style","placeholder","required","class","for","Component","mapDispatchToProps","actions","connect","BookCard","bookInfo","src","join","split","splice","Homepage","bookCards","bookData","header","Date","now","index","key","App","exact","path","component","React","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf9f6868.chunk.js","sourcesContent":["const PopularBooks = ['Harry Potter and The Sorcerer\\'s stone','Game of Thrones','The Hobbit','The Warren Buffet Way','The Hunger Games', 'A Brief History of Time'];\r\n\r\n\r\nexport default PopularBooks;","export const FETCH_POPULAR_BOOKS = 'fetch popular books';\r\n\r\nexport const FETCH_QUERY_BOOK = 'fetch query book';\r\n\r\nexport const CLEAR_SEARCH_RESULTS = 'clear search results';","import {FETCH_POPULAR_BOOKS}  from '../actionTypes';\r\n\r\n\r\nfunction popularBooksReducer( state = null, action) {\r\n    //console.log('action payload:',action.payload);\r\n    switch(action.type) {\r\n        case FETCH_POPULAR_BOOKS:\r\n            return action.payload;\r\n        default:            \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default popularBooksReducer;","import { combineReducers } from 'redux';\r\nimport popularBooksReducer from './popularBooksReducer';\r\nimport searchResultsReducer from './searchResults';\r\n\r\n\r\n\r\nvar reducers = combineReducers({ popularBooks : popularBooksReducer, searchResults : searchResultsReducer });\r\n\r\n\r\nexport default reducers;\r\n\r\n","import { FETCH_QUERY_BOOK, CLEAR_SEARCH_RESULTS } from '../actionTypes';\r\n\r\n\r\nexport default function searchResults(state = null, action){\r\n    switch(action.type) {\r\n        case FETCH_QUERY_BOOK:\r\n            return action.payload;\r\n        case CLEAR_SEARCH_RESULTS:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nvar store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\n\r\nexport default store ;\r\n\r\n","import fetchPopularBooks from './fetchPopularBooks';\r\nimport fetchQueryBook from './fetchQueryBook';\r\nimport clearSearch from './clearSearch';\r\n\r\nexport  default { fetchPopularBooks, fetchQueryBook, clearSearch };","\r\nimport PopularBooks from '../../popularBooks';\r\nimport {FETCH_POPULAR_BOOKS} from '../actionTypes';\r\nimport store from '../store';\r\n\r\nfunction fetchPopularBooks() {\r\n    //console.log('action creator fetchpopularbooks called');\r\n    return async dispatch => {\r\n        var booksData = [];\r\n        var ajxReqs = [];\r\n        PopularBooks.forEach( booktitle => ajxReqs.push( fetch('https://www.googleapis.com/books/v1/volumes?q='+booktitle+'&maxResults=1') ));\r\n                        \r\n    \r\n        await Promise.all(ajxReqs).then( async resArray => { \r\n            for(let i=0; i < resArray.length; i++){ \r\n                var json = await resArray[i].json();\r\n                var data = json.items[0].volumeInfo;\r\n                var bookinfo = { \r\n                    title : data.title, \r\n                    authors : data.authors, \r\n                    publisher : data.publisher,\r\n                    description : data.description,\r\n                    thumbnailLink : data.imageLinks.thumbnail,\r\n                    canonicalVolumeLink : data.canonicalVolumeLink\r\n                };\r\n                booksData.push(bookinfo);\r\n            }\r\n        });\r\n        \r\n        dispatch({ type : FETCH_POPULAR_BOOKS, payload : booksData });\r\n    }\r\n}\r\n\r\nexport default fetchPopularBooks;","import { FETCH_QUERY_BOOK } from '../actionTypes';\r\n\r\n\r\nfunction fetchQueryBook(query:string) {\r\n    return async (dispatch:any) => {\r\n        var res = await fetch('https://www.googleapis.com/books/v1/volumes?q='+query+'&maxResults=40');\r\n        var json = await res.json();\r\n        var data = json.items.map( (item:any) => ( item.volumeInfo && {\r\n            title : item.volumeInfo.title || \"\", \r\n            authors : item.volumeInfo.authors || [], \r\n            publisher : item.volumeInfo.publisher || \"\",\r\n            description : item.volumeInfo.description || \"\",\r\n            thumbnailLink : item.volumeInfo.imageLinks && item.volumeInfo.imageLinks.thumbnail || \"\",\r\n            canonicalVolumeLink : item.volumeInfo.canonicalVolumeLink || \"\"\r\n        } ));\r\n        dispatch({ type : FETCH_QUERY_BOOK, payload : data});\r\n    };\r\n}\r\n\r\nexport default fetchQueryBook;","import {CLEAR_SEARCH_RESULTS} from '../actionTypes';\r\n\r\n\r\nexport default function clearSearch() {\r\n    return dispatch => {\r\n        dispatch({ type : CLEAR_SEARCH_RESULTS});\r\n    } ;\r\n};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../store/actions';\r\n//import searchicon from '../images/search-icon2.png';\r\nimport 'materialize-css/dist/css/materialize.css';\r\nimport '../styles/navbar.css';\r\n\r\n\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isToggled : false\r\n        };\r\n        this.toggleSearch = this.toggleSearch.bind(this);\r\n        this.triggerSearch = this.triggerSearch.bind(this);\r\n    }\r\n\r\n    toggleSearch() {\r\n        this.setState({isToggled : !this.state.isToggled});\r\n    }\r\n\r\n    triggerSearch(event) {\r\n        event.preventDefault();\r\n        let query = event.target.search.value ;\r\n        this.props.fetchQueryBook(query);\r\n    }\r\n    \r\n    render() {\r\n        var formStyle = {\"border-bottom\":\"1px solid #455a64\"};\r\n        var searchbarStyle = {\"margin\":\"0\",\"height\":\"100%\"};\r\n        return (\r\n            <>\r\n                <nav>\r\n                    <div className=\"nav-wrapper main-navbar  blue-grey darken-4\">\r\n                        <div className=\"logo-div\">\r\n                            <Link className=\"brandLogo\" to={location => { this.props.clearSearch(); return {...location,pathname:\"/\"}}}>\r\n                                GBooksLib-Redux\r\n                            </Link>\r\n                            <span className=\"subheader\">A Client Interface for Google Books Api</span>\r\n                        </div>\r\n                        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                            <li><a href=\"#!\"><i className=\"material-icons\" onClick={this.toggleSearch}>search</i></a></li>\r\n                        </ul>                                           \r\n                    </div>\r\n                    <div className=\"nav-wrapper\">\r\n                        {this.state.isToggled && \r\n                                <form onSubmit={this.triggerSearch} style={formStyle}>\r\n                                    <div className=\"input-field blue-grey darken-2\" style={searchbarStyle}>\r\n                                        <input id=\"search\" type=\"search\" placeholder=\"Enter book title, author or publisher name\" required />\r\n                                        <label class=\"label-icon\" for=\"search\"><i class=\"material-icons\">search</i></label>\r\n                                        <i className=\"material-icons closeIcon\" onClick={this.toggleSearch}>close</i>\r\n                                    </div>\r\n                                </form>\r\n                            }     \r\n                    </div>                                                      \r\n                </nav>\r\n                \r\n                          \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n// {/* <div className=\"main-navbar\">\r\n//                     <div className=\"app-info\">\r\n//                         <Link to={(location) => { console.log('link fired');this.props.clearSearch(); return {...location,pathname:\"/\"}}}><span className=\"app-name\">Bookstore-Redux</span></Link><br/>\r\n//                         <span className=\"app-developer\">Search Books from Google Books Api.</span>\r\n//                     <img src={searchicon} className=\"search-icon\" onClick={this.toggleSearch}/>\r\n//                     </div>\r\n//                 </div> */}\r\n\r\n\r\n\r\n\r\nvar mapDispatchToProps = {\r\n    fetchQueryBook : actions.fetchQueryBook,\r\n    clearSearch : actions.clearSearch\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps) (Header);","import React, { Component } from 'react';\r\nimport '../styles/bookcard.css';\r\n\r\nclass BookCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {        \r\n        var { title, authors, description, thumbnailLink, publisher, canonicalVolumeLink } = this.props.bookInfo  ;\r\n        return (\r\n        <div className=\"book-card s12 m6 l6 z-depth-4\">\r\n            <div className=\"previewBook\">\r\n                {canonicalVolumeLink && thumbnailLink && <a href={canonicalVolumeLink}><img src={ thumbnailLink } className=\"book-image\" /></a> || <div className=\"no-image-div\"><b>No Image Available</b></div>}\r\n                \r\n            </div>\r\n            <div className=\"volumeInfo\">\r\n                <div className=\"infoContainer\">\r\n                    <table>\r\n                        <tr>\r\n                            <td className=\"field\"><b>Title</b></td>\r\n                            <td className=\"seperator\"><b>:</b></td>\r\n                            <td>{ title &&  title || \"No Title Available\" }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"field\"><b>Authors</b></td>\r\n                            <td className=\"seperator\"><b>:</b></td>\r\n                            <td>{ authors && authors.join(\", \") || \"No Authors Info Available\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"field\"><b>Description</b></td>\r\n                            <td className=\"seperator\"><b>:</b></td>\r\n                            <td>{ description && (description.split(\" \").length > 30 ? <> {description.split(\" \").splice(0,30).join(\" \")} <a href={canonicalVolumeLink}>more</a> </> : description ) || \"No Description Available\" }</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"field\"><b>Publishers</b></td>\r\n                            <td className=\"seperator\"><b>:</b></td>\r\n                            <td>{ publisher && publisher || \"No Publisher Info Available\"}</td>\r\n                        </tr>\r\n                    </table>\r\n                </div>                \r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BookCard;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../store/actions';\r\nimport BookCard from '../components/bookCard';\r\nimport 'materialize-css/dist/css/materialize.css';\r\n\r\n\r\nclass Homepage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //this.renderBookCards = this.renderBookCards.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.fetchPopularBooks();\r\n    }\r\n\r\n\r\n    render() {\r\n        var bookData =  this.props.searchResults ||  this.props.popularBooks || [] ;\r\n        //console.log('time to get bookData from store:',bookData,' time',Date.now());    \r\n        var bookCards = [] ;\r\n        var header = this.props.searchResults ? <h4 style={{\"margin-left\":\"30px\"}}>Search Results:</h4> : <h4 style={{\"margin-left\":\"30px\"}}>Best Sellers:</h4>;\r\n        \r\n        var time = Date.now();\r\n        bookCards = bookData.map( (bookInfo,index) => <div key={index}><BookCard bookInfo={bookInfo} index={index} /></div>);\r\n        //console.log('time to create all cards:',Date.now()-time, ' bookcards:',bookData);\r\n        //console.log('bookData:',bookData,' bookCards:',bookCards);\r\n        return (<div class>\r\n                    {header} \r\n                    <div className=\"row\">\r\n                        { bookCards }\r\n                    </div>                                     \r\n                </div> \r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({popularBooks,searchResults}) {\r\n    return { popularBooks , searchResults};\r\n};\r\n\r\nvar mapDispatchToProps = {\r\n    fetchPopularBooks : actions.fetchPopularBooks\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Homepage);","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport Header from './components/navbar';\nimport Homepage from './pages/homepage';\nimport './styles/app.css';\n\n\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n        <BrowserRouter>\n          <Header/>\n          <Route exact path=\"/\" component={Homepage} />\n           \n        </BrowserRouter>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>,\ndocument.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}